<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <sfdc:config name="Salesforce__Basic_Authentication" username="java.gdb@gmail.com" password="pi=3.1415" securityToken="GWQtfpRW7bOUDdlr86yOxzFu" doc:name="Salesforce: Basic Authentication"/>
    <db:mysql-config name="MySQL_Configuration" host="mudb.mulesoft-training.com" port="3306" user="mule" password="mule" database="training" doc:name="MySQL Configuration"/>
    <jms:activemq-connector name="Active_MQ" specification="1.1" brokerURL="tcp://jms.mulesoft-training.com:61616" validateConnections="true" doc:name="Active MQ"/>
    <batch:job name="pollDatabaseBatch">
        <batch:input>
            <poll doc:name="Poll">
                <fixed-frequency-scheduler frequency="5"/>
                <watermark variable="lastAccountID" default-expression="0" selector="MAX" selector-expression="#[payload.accountID]"/>
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[select *
from accounts
where postal = '80305' and accountID > 6850]]></db:parameterized-query>
                </db:select>
            </poll>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	Id: payload01.accountID as :string,
	Name: payload01.name,
	BillingStreet: payload01.street,
	BillingCity: payload01.city,
	BillingState: payload01.state,
	BillingPostalCode: payload01.postal,
	BillingCountry: payload01.country
})]]></dw:set-payload>
            </dw:transform-message>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step3">
                <enricher source="#[payload.size() &gt; 0]" target="#[recordVars.exists]" doc:name="Message Enricher">
                    <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT Name FROM Account WHERE Name = '#[payload.Name]'" doc:name="Check for duplicate in SFDC"/>
                </enricher>
                <logger message="#['\n\nRECORD: ' + payload]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="Batch_Step2" accept-expression="#[!recordVars.exists]">
                <batch:commit size="10" doc:name="Batch Commit">
                    <sfdc:create config-ref="Salesforce__Basic_Authentication" type="Account" doc:name="Insert new records into SFDC">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:create>
                </batch:commit>
                <logger message="#['\n\nRECORD was inserted: ' + payload + '\n\n\n']" level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
    </batch:job>
    <flow name="appdev-finalFlow" initialState="stopped">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/sfdc" doc:name="HTTP"/>
        <sfdc:query config-ref="Salesforce__Basic_Authentication" query="dsql:SELECT BillingCity,BillingCountry,BillingGeocodeAccuracy,BillingPostalCode,BillingState,BillingStreet,Name FROM Account WHERE BillingPostalCode = '27215'" doc:name="Salesforce"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getCSVAccountsFlow" initialState="stopped">
        <file:inbound-endpoint path="src/main/resources/input" moveToPattern="#[message.inboundProperties.originalFilename].backup" moveToDirectory="src/main/resources/output" responseTimeout="10000" doc:name="File">
            <file:filename-regex-filter pattern=".*csv" caseSensitive="true"/>
        </file:inbound-endpoint>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <foreach doc:name="For Each">
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        </foreach>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="pollDatabaseFlow" initialState="stopped" processingStrategy="synchronous">
        <poll doc:name="Poll">
            <fixed-frequency-scheduler frequency="5"/>
            <watermark variable="lastAccountID" default-expression="0" selector="MAX" selector-expression="#[payload.accountID]"/>
            <db:select config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[select *
from accounts
where postal = '80305' and accountID > #[flowVars.lastAccountID]]]></db:parameterized-query>
            </db:select>
        </poll>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getTopicMessagesFlow" initialState="started">
        <jms:inbound-endpoint topic="apessentials" connector-ref="Active_MQ" doc:name="JMS"/>
        <logger level="INFO" doc:name="Logger" message="#[payload]"/>
    </flow>
    <flow name="appdev-finalFlow1">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/jms" allowedMethods="GET" doc:name="HTTP"/>
        <set-payload value="#[message.inboundProperties.'http.query.params'.name] : #[message.inboundProperties.'http.query.params'.messageBody]" doc:name="Set Payload"/>
        <jms:outbound-endpoint topic="apessentials" connector-ref="Active_MQ" doc:name="JMS"/>
    </flow>
    <batch:job name="getCSVAccountBatch">
        <batch:input>
            <file:inbound-endpoint path="src/main/resources/input" moveToPattern="#[message.inboundProperties.originalFilename].backup" moveToDirectory="src/main/resources/output" responseTimeout="10000" doc:name="File">
                <file:filename-regex-filter pattern=".*csv" caseSensitive="true"/>
            </file:inbound-endpoint>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
            </dw:transform-message>
            <set-variable variableName="size" value="#[payload.size()]" doc:name="set size flowVar"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step">
                <set-variable variableName="fname" value="#[payload.Name]" doc:name="set fname flowVar"/>
                <batch:set-record-variable variableName="rname" value="#[payload.Name]" doc:name="set rname to record variable"/>
                <logger message="#[recordVars.rname]" level="INFO" doc:name="Logger"/>
            </batch:step>
            <batch:step name="Batch_Step1">
                <logger message="#[recordVars.rname]" level="INFO" doc:name="Logger"/>
            </batch:step>
        </batch:process-records>
    </batch:job>
</mule>
