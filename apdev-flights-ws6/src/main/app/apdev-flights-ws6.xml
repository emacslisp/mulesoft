<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration_io" host="mu.mulesoft-training.com" port="80" basePath="/essentials/united" doc:name="HTTP Request Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="training-american-ws.cloudhub.io" port="80" basePath="/api/" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="https://anypoint.mulesoft.com/exchange/api/v1/organizations/68ef9520-24e9-4cf2-b2f5-620025690913/assets/68ef9520-24e9-4cf2-b2f5-620025690913/training-american-flights-api/1.0.1/api/root"/>
    </http:request-config>
    <flow name="getFlightsFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" doc:name="HTTP"/>
        <set-variable variableName="airline" value="#[message.inboundProperties.'http.query.params'.airline]" doc:name="Variable"/>
        <flow-ref name="setCodeSubflow" doc:name="setCodeSubflow"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.airline==&quot;delta&quot;]">
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            </when>
            <when expression="#[flowVars.airline==&quot;united&quot;]">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <otherwise>
                <flow-ref name="getAllAirlineFlights" doc:name="getAllAirlineFlights"/>
            </otherwise>
        </choice>
        <validation:is-not-empty value="#[payload]" message="Payload is empty" doc:name="Validation"/>
        <dw:transform-message metadata:id="bc8ac939-6e21-4e2d-b65a-183d0a5d380d" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	code: payload01.flightCode,
	price: payload01.price,
	origin: payload01.origination,
	destination: payload01.destination,
	departureDate: payload01.departureDate,
	planeType: payload01.planeType,
	airlineName: payload01.airlineName,
	emptySeats: payload01.availableSeats
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <sub-flow name="setCodeSubflow">
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code == empty? &quot;SFO&quot;:message.inboundProperties.'http.query.params'.code]" doc:name="Set airport code variable"/>
    </sub-flow>
    <flow name="getUnitedFlightsFlow">
        <http:request config-ref="United_HTTP_Request_Configuration_2" path="/essentials/united/flights/{destination}" method="GET" doc:name="United REST Request">
            <http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.code]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message metadata:id="c46e4bf0-0ed2-4046-873f-20257e901023" doc:name="Transform Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload.flights map ((flight , indexOfFlight) -> {
	code: flight.code,
	price: flight.price,
	origin: flight.origin,
	destination: flight.destination,
	departureDate: flight.departureDate,
	planeType: flight.planeType,
	airlineName: flight.airlineName,
	emptySeats: flight.emptySeats
})]]></dw:set-payload>
        </dw:transform-message>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getAmericanFlightsFlow">
        <set-variable variableName="ID" value="#[message.inboundProperties.'http.query.params'.ID == empty? 1:message.inboundProperties.'http.query.params'.ID]" doc:name="Variable"/>
        <http:request config-ref="HTTP_Request_Configuration" path="/flights/{ID}" method="GET" doc:name="American REST Request">
            <http:request-builder>
                <http:uri-param paramName="ID" value="#[flowVars.ID]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message metadata:id="8bf17a89-d421-4054-b17c-441100ec1202" doc:name="Transform Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.ID,
	airline: null,
	flightCode: payload01.code,
	fromAirportCode: payload01.origin,
	toAirportCode: payload01.destination,
	departureDate: payload01.departureDate,
	emptySeats: payload01.emptySeats,
	totalSeats: payload01.plane.totalSeats,
	price: payload01.price,
	planeType: payload01.plane.type
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getDeltaFlightsFlow">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Delta SOAP Request"/>
        <dw:transform-message metadata:id="1efb49a4-1d1e-4080-ad1a-c3ce14b3c8d7" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	code: return.code,
	price: return.price,
	origin: return.origin,
	destination: return.destination,
	departureDate: return.departureDate,
	planeType: return.planeType,
	airlineName: return.airlineName,
	emptySeats: return.emptySeats
})]]></dw:set-payload>
        </dw:transform-message>
	<logger level="INFO" doc:name="Logger" />

    </flow>
    <flow name="getAllAirlineFlights">
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
                <filter ref="Filter_NOT_LIST" doc:name="Delta_Filter_NOT_List"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
                <filter ref="Filter_NOT_LIST" doc:name="United_Filter_NOT_LIST"/>
            </processor-chain>
        </scatter-gather>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
</mule>
